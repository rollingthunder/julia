; -------- Disassembly --------------------
shader main
  asic(CI)
  type(VS)

  s_load_dword  s0, s[4:5], 0x01                        // 000000000000: C0000501
  s_waitcnt     lgkmcnt(0)                              // 000000000004: BF8C007F
  s_bfe_u32     s1, s0, 0x00100000                      // 000000000008: 9381FF00 00100000
  s_bfe_u32     s0, s0, 0x00100010                      // 000000000010: 9380FF00 00100010
  s_mul_i32     s1, s1, s8                              // 000000000018: 93010801
  v_add_i32     v13, vcc, s1, v0                        // 00000000001C: 4A1A0001
  s_mul_i32     s0, s0, s9                              // 000000000020: 93000900
  v_add_i32     v1, vcc, s0, v1                         // 000000000024: 4A020200
  s_load_dword  s0, s[4:5], 0x03                        // 000000000028: C0000503
  v_mov_b32     v14, 0                                  // 00000000002C: 7E1C0280
  s_movk_i32    s1, 0x0000                              // 000000000030: B0010000
  s_load_dwordx2  s[4:5], s[6:7], 0x06                  // 000000000034: C0420706
  s_load_dwordx4  s[8:11], s[6:7], 0x00                 // 000000000038: C0840700
  v_lshl_b64    v[4:5], 1, 0                            // 00000000003C: D2C20004 00010081
  s_waitcnt     lgkmcnt(0)                              // 000000000044: BF8C007F
  v_cmp_ge_i64  vcc, s[4:5], v[4:5]                     // 000000000048: 7D4C0804
  s_cbranch_vccz  label_0042                            // 00000000004C: BF86002E
  v_mul_hi_u32  v4, s4, v1                              // 000000000050: D2D40004 00020204
  v_mul_lo_u32  v5, s5, v1                              // 000000000058: D2D20005 00020205
  v_add_i32     v5, vcc, v5, v4                         // 000000000060: 4A0A0905
  v_mul_lo_u32  v4, s4, v1                              // 000000000064: D2D20004 00020204
  v_lshl_b64    v[4:5], v[4:5], 3                       // 00000000006C: D2C20004 00010704
  v_lshl_b64    v[2:3], v[13:14], 3                     // 000000000074: D2C20002 0001070D
  v_add_i32     v2, vcc, s8, v2                         // 00000000007C: 4A040408
  v_mov_b32     v6, s9                                  // 000000000080: 7E0C0209
  v_addc_u32    v3, vcc, v6, v3, vcc                    // 000000000084: 50060706
  v_add_i32     v14, vcc, s10, v4                       // 000000000088: 4A1C080A
  v_mov_b32     v6, s11                                 // 00000000008C: 7E0C020B
  v_addc_u32    v15, vcc, v6, v5, vcc                   // 000000000090: 501E0B06
  s_lshl_b64    s[2:3], s[0:1], 3                       // 000000000094: 8F828300
  v_mov_b32     v5, 0                                   // 000000000098: 7E0A0280
  v_mov_b32     v6, 0                                   // 00000000009C: 7E0C0280
  s_nop         0x0000                                  // 0000000000A0: BF800000
  s_nop         0x0000                                  // 0000000000A4: BF800000
label_002A:
  flat_load_dwordx2  v[8:9], v[2:3]                     // 0000000000A8: DC340000 08000002
  flat_load_dwordx2  v[10:11], v[14:15]                 // 0000000000B0: DC340000 0A00000E
  v_add_i32     v2, vcc, v2, s2                         // 0000000000B8: D24A6A02 00000502
  v_mov_b32     v12, s3                                 // 0000000000C0: 7E180203
  v_addc_u32    v3, vcc, v3, v12, vcc                   // 0000000000C4: 50061903
  v_add_i32     v14, vcc, v14, 8                        // 0000000000C8: D24A6A0E 0001110E
  v_addc_u32    v15, vcc, v15, 0, vcc                   // 0000000000D0: D2506A0F 01A9010F
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000000D8: BF8C0070
  v_mul_f64     v[8:9], v[8:9], v[10:11]                // 0000000000DC: D2CA0008 00021508
  v_add_f64     v[5:6], v[5:6], v[8:9]                  // 0000000000E4: D2C80005 00021105
  s_add_u32     s4, s4, -1                              // 0000000000EC: 8004C104
  s_addc_u32    s5, s5, -1                              // 0000000000F0: 8205C105
  v_lshl_b64    v[8:9], 0, 0                            // 0000000000F4: D2C20008 00010080
  v_cmp_eq_i64  vcc, s[4:5], v[8:9]                     // 0000000000FC: 7D441004
  s_cbranch_vccnz  label_0044                           // 000000000100: BF870003
  s_branch      label_002A                              // 000000000104: BF82FFE8
label_0042:
  v_mov_b32     v5, 0                                   // 000000000108: 7E0A0280
  v_mov_b32     v6, 0                                   // 00000000010C: 7E0C0280
label_0044:
  s_load_dwordx2  s[2:3], s[6:7], 0x04                  // 000000000110: C0410704
  v_mul_hi_u32  v4, v1, s0                              // 000000000114: D2D40004 00000101
  v_mul_lo_u32  v1, v1, s0                              // 00000000011C: D2D20001 00000101
  v_add_i32     v0, vcc, v1, v13                        // 000000000124: 4A001B01
  v_addc_u32    v1, vcc, v4, 0, vcc                     // 000000000128: D2506A01 01A90104
  v_lshl_b64    v[0:1], v[0:1], 3                       // 000000000130: D2C20000 00010700
  s_waitcnt     lgkmcnt(0)                              // 000000000138: BF8C007F
  v_add_i32     v0, vcc, s2, v0                         // 00000000013C: 4A000002
  v_mov_b32     v4, s3                                  // 000000000140: 7E080203
  v_addc_u32    v1, vcc, v4, v1, vcc                    // 000000000144: 50020304
  flat_store_dwordx2  v[0:1], v[5:6]                    // 000000000148: DC740000 00000500
  s_endpgm                                              // 000000000150: BF810000
end

